name: qemu

on:
  push:
    branches: [ master ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Install prerequisites
      run: |
        sudo apt-get install -y \
          ninja-build g++-10 wget zstd \
          gnu-efi \
          udisks2
        sudo python3 -m pip install meson

    # Code checkout
    - name: Checkout the repo with all submodules
      uses: actions/checkout@v2
      with:
        submodules: recursive

    # Build mlibc
    - name: Build mlibc
      run: |
        cd 3rdparty/mlibc
        mkdir build_cross
        cd build_cross
        meson -Dstatic=true -Dprefix=$(pwd)/install -Dbuild_tests=true --cross-file ../cross_file.txt ..
        ninja
        ninja install
        # mlibc does not link "ar" but busybox requires it
        ln -s /usr/bin/ar install/bin/mlibc-ar

    # Build busybox
    - name: Build busybox
      run: |
        cd 3rdparty/busybox
        ./generate_config.sh
        make SKIP_STRIP=y

    # Build kernel
    - name: Build Kernel binary
      run: |
        mkdir build
        cd build
        # add gnu-efi include path
        cmake -DCMAKE_CXX_STANDARD_INCLUDE_DIRECTORIES=/usr/include/efi/x86_64 -DCMAKE_C_COMPILER=gcc-10 -DCMAKE_CXX_COMPILER=g++-10 ..
        make
    - name: Build kernel disk image
      run: |
        # get an EFI shell
        wget https://archlinux.org/packages/extra/any/edk2-shell/download -O edk2-shell.tar.zstd
        mkdir edk2-shell && cd edk2-shell && tar xvf ../edk2-shell.tar.zstd && cd ..
        cp .disk.raw.source disk.raw
        export \
          CPATH=/usr/include/efi/x86_64 \
          KERNEL_BUILD=build
        make boot_loader.efi
        make kernel
        sudo ./build_disk_image.sh "$(pwd)"/edk2-shell/usr/share/edk2-shell/x64/Shell_Full.efi
